% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cpaUtils.R
\name{preprocessForCpa}
\alias{preprocessForCpa}
\title{Preprocess (Regularize spacing and smooth) Data before CPA}
\usage{
preprocessForCpa(
  data,
  window_width,
  index_col = "RelativeTime",
  values_col = NULL,
  output_col = "CpaInput",
  facet_col = NULL,
  stride = 1,
  agg_fn_expr = sum(.values)
)
}
\arguments{
\item{data}{a dataframe with a index column of time points}

\item{window_width}{the numeric or \code{lubridate::duration} width of the sliding window}

\item{index_col}{a string indicating which column of \code{data} is the time column}

\item{values_col}{a string indicating which column of \code{data} has values. If null or empty, then a mock column of only 1's is used.}

\item{output_col}{a string for the name of the interpolated values. Defaults to 'CpaInput'.}

\item{facet_col}{a string that specifies which column, if any, to treat as a faceting variable. The time-series interpolation will be executed seperately for each value of this column.}

\item{stride}{a numeric or \code{lubridate::duration} for the spacing between sliding window steps.}

\item{agg_fn_expr}{an interpolation expression calculated at each sliding window location.}
}
\value{
data frame with columns for index and output. Where index will be regularly spaced and output will consist of interpolated values.
}
\description{
READ-TV uses changepoint algorithms in the \code{changepoint} package which expect (1) regularly spaced data in time, and (2) each x-axis time point should have a unique value on the y-axis.
\code{preprocessForCpa} regularizes the time spacing and performs an interpolation function at each of the new time points.
}
\details{
\code{slidingWindow} is used by \code{preprocessForCpa} for interpolation.
}
\examples{
raw_data = data.frame(Time = rnorm(100, mean = 10))

#uncomment to view plot
#plot(raw_data$Time, rep.int(1, nrow(raw_data)))

pre_proc_data = preprocessForCpa(raw_data,
  window_width = 1,
  index_col = 'Time',
  stride = .1)

#uncomment to view plot
#with(pre_proc_data, plot(Time, CpaInput))

}
